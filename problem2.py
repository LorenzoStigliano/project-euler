# Problem 2 : Even Fibonacci numbers
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

def problem2(n):
    sum_even = 0
    last_fib = 0
    count = 0
    fib = [1,2]
    while(last_fib < n):
        sum_even = sum([x for x in fib if x%2==0])
        i = fib[count] + fib[count+1]
        fib.append(i)
        last_fib = fib[-1]
        count+=1

    return sum_even

#Tests provided by codecamp. https://www.freecodecamp.org/learn/coding-interview-prep/project-euler/problem-2-even-fibonacci-numbers
print(problem2(10)==10)
print(problem2(60)==44)
print(problem2(1000)==798)
print(problem2(100000)==60696)
print(problem2(4000000)==4613732)
